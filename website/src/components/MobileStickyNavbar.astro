---
export interface Props {
  sections: { name: string; hash: string; n: number }[];
}

const { sections } = Astro.props;
---

<div
  id="mobile-sections-container"
  class="md:hidden sticky shadow-md bg-white top-0 z-50 order-3">
  <div class="pt-8 pb-8 px-6">
    <div class="flex items-center">
      <div
        onclick="toggle()"
        class="bg-airbnb text-white rounded-md w-fit px-3 py-0.5 text-sm flex gap-2 mr-5 cursor-pointer">
        <div class="font-semibold font-mont">contents</div>
        <div class="-translate-y-px">
          <div
            id="mobile-sections-arrow"
            class="font-extrabold font-sans text-white transition-transform origin-right duration-200">
            {">"}
          </div>
        </div>
      </div>

      <span id="scrollspy" class="leading-5 pt-0.5"></span>
    </div>

    <!-- DROPDOWN -->
    <div
      id="mobile-sections-nav"
      class="grid overflow-hidden grid-rows-[0fr] transition-all duration-500">
      <div class="min-h-0 pl-4">
        <ul
          class="font-sans pt-8 pb-4 flex flex-col gap-3 leading-tight"
          onclick="toggle();">
          {
            sections.map((sec) => (
              <li>
                <a href={"#" + sec.hash}>
                  <div class="flex gap-1">
                    <b>{sec.n}.</b>
                    <span>{sec.name}</span>
                  </div>
                </a>
              </li>
            ))
          }
        </ul>
      </div>
    </div>
    <script is:inline>
      const dropdown = document.querySelector("#mobile-sections-nav");
      const arrow = document.querySelector("#mobile-sections-arrow");
      let t = false;

      function toggle() {
        if (t) {
          dropdown.style.gridTemplateRows = "0fr";
          arrow.style.transform = "rotate(0deg)";
        } else {
          dropdown.style.gridTemplateRows = "1fr";
          arrow.style.transform =
            "translateX(-1px) translateY(5px) rotate(90deg)";
        }
        t = !t;
      }

      const container = document.querySelector("#mobile-sections-container");
      window.addEventListener("click", (e) => {
        if (e.tartget != container && !container.contains(e.target) && t) {
          toggle();
        }
      });
    </script>
  </div>
</div>
